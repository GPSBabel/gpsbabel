diff --git a/gpsbabel/configure.in b/gpsbabel/configure.in
index 44b4c93b..984b9e7a 100644
--- a/gpsbabel/configure.in
+++ b/gpsbabel/configure.in
@@ -55,6 +55,7 @@ AC_ARG_WITH(cet,[  --with-cet=(default,all,minimal)],
 
 if test $GCC = yes; then
  CFLAGS="$CFLAGS -Wall"
+ CXXFLAGS="$CXXFLAGS -Wall"
 fi
 
 if test "$cet" = "all"; then
@@ -156,15 +157,21 @@ AC_SUBST(RC)
 # On RHEL/OEL/SL/CENTOS/FEDORA qmake is from Qt3, and qmake-qt4 is from Qt4.
 # If qmake-qt4 isn't found look for the standard name qmake and assume it is
 # from a useful version Qt.
-AC_CHECK_TOOLS(QMAKE, [qmake-qt4 qmake], "no")
-AC_CHECK_PROGS(LUPDATE, [lupdate-qt4 lupdate])
-AC_CHECK_PROGS(LRELEASE, [lrelease-qt4 lrelease])
+AC_CHECK_TOOLS(QMAKE, [qmake-qt5 qmake-qt4 qmake], "no")
+AC_CHECK_TOOLS(LUPDATE, [lupdate-qt5 lupdate-qt4 lupdate])
+AC_CHECK_TOOLS(LRELEASE, [lrelease-qt5 lrelease-qt4 lrelease])
 
 if test "$QMAKE" = no ; then
-  AC_MSG_ERROR([Qt4 is required, but not found]);
+  AC_MSG_ERROR([Qt4 or Qt5 is required, but neither was found]);
 fi
 
-QT_LIBS="-L$($QMAKE -query QT_INSTALL_LIBS) -l QtCore"
+# guess the name of the Qt Core library.
+QT_LIBVER=$($QMAKE -query -query QT_VERSION | sed -e 's/\..*//')
+if test "$QT_LIBVER" -ge 5 ; then
+	QT_LIBS="-L$($QMAKE -query QT_INSTALL_LIBS) -lQt${QT_LIBVER}Core"
+else
+	QT_LIBS="-L$($QMAKE -query QT_INSTALL_LIBS) -lQtCore"
+fi
 QT_INC=$($QMAKE -query QT_INSTALL_HEADERS)
 QT_INC_OPT="-I"
 QT_SYSINC_OPT="-isystem"
@@ -222,6 +229,28 @@ case "$target" in
       QT_INC_OPT="-F"
       QT_SYSINC_OPT="-iframework"
       ;;
+    *-*-freebsd*)
+	GBSER=gbser_posix.o
+	AC_MSG_CHECKING(for libusb)
+	if test "$with_libusb" = no ; then
+		AC_MSG_RESULT(check not done)
+		OSJEEPS=jeeps/gpsusbstub.o
+	else
+		OLDFLAGS=$LDFLAGS
+		OCFLAGS=$CFLAGS
+		LDFLAGS="$LDFLAGS -lusb"
+		CFLAGS="$OCFLAGS"
+
+		AC_CHECK_LIB([usb], [usb_interrupt_read],
+			AC_DEFINE(HAVE_LIBUSB, 1, [Defined if you have libusb])
+			[USB_CFLAGS=""]
+			[USB_LIBS="-lusb"]
+#			,[AC_MSG_ERROR([libusb is needed])]
+			)
+		OSJEEPS=jeeps/gpslibusb.o
+		CFLAGS="$OCFLAGS"
+	fi
+	;;
     *)
 	GBSER=gbser_posix.o
 	AC_MSG_CHECKING(for libusb)
@@ -283,6 +312,34 @@ case "$target" in
 	;;
 esac
 
+case "$target" in
+	*-*-darwin*)
+	;;
+	*)
+	AC_MSG_CHECKING(for reduce relocations)
+	OCPPFLAGS="$CPPFLAGS"
+	CPPFLAGS="$CPPFLAGS -I$QT_INC"
+	AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+		#include <QtCore/QString>
+		void f(void) {
+		}])],
+		[AC_MSG_RESULT(no)],
+		[OCXXFLAGS="$CXXFLAGS"
+		CXXFLAGS="$CXXFLAGS -fPIC"
+		AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+			#include <QtCore/QString>
+			void f(void) {
+			}])],
+			[AC_MSG_RESULT(yes)
+			CFLAGS="$CFLAGS -fPIC"],
+			[AC_MSG_RESULT(unknown)
+			CXXFLAGS="$OCXXFLAGS"]
+			)]
+		)
+	CPPFLAGS="$OCPPFLAGS"
+	;;
+esac
+
 AC_MSG_CHECKING(for random stuff to make you feel better)
 AC_MSG_RESULT(failed)
 
diff --git a/gpsbabel/tef_xml.cc b/gpsbabel/tef_xml.cc
index c8a64f8d..134eaa17 100644
--- a/gpsbabel/tef_xml.cc
+++ b/gpsbabel/tef_xml.cc
@@ -72,11 +72,11 @@ tef_start(xg_string args, const QXmlStreamAttributes* attrv)
   bool valid = false;
 
   foreach(QXmlStreamAttribute attr, *attrv) {
-    if (attr.name().compare("Comment", Qt::CaseInsensitive) == 0) {
-      if (attr.value().compare("TourExchangeFormat", Qt::CaseInsensitive) == 0) {
+    if (attr.name().compare(QLatin1String("Comment"), Qt::CaseInsensitive) == 0) {
+      if (attr.value().compare(QLatin1String("TourExchangeFormat"), Qt::CaseInsensitive) == 0) {
         valid = true;
       }
-    } else if (attr.name().compare("Version", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("Version"), Qt::CaseInsensitive) == 0) {
       version = attr.value().toString().toDouble();
     }
   }
@@ -95,9 +95,9 @@ tef_header(xg_string args, const QXmlStreamAttributes* attrv)
 {
   route = route_head_alloc();
   foreach(QXmlStreamAttribute attr, *attrv) {
-    if (attr.name().compare("Name", Qt::CaseInsensitive) == 0) {
+    if (attr.name().compare(QLatin1String("Name"), Qt::CaseInsensitive) == 0) {
       route->rte_name = attr.value().toString().trimmed();
-    } else if (attr.name().compare("Software", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("Software"), Qt::CaseInsensitive) == 0) {
       route->rte_desc = attr.value().toString().trimmed();
     }
   }
@@ -248,20 +248,20 @@ tef_item_start(xg_string args, const QXmlStreamAttributes* attrv)
     QString attrstr = attr.value().toString();
     QByteArray attrtext = attrstr.toUtf8();
 
-    if (attr.name().compare("SegDescription", Qt::CaseInsensitive) == 0) {
+    if (attr.name().compare(QLatin1String("SegDescription"), Qt::CaseInsensitive) == 0) {
       wpt_tmp->shortname = attrstr.trimmed();
-    } else if (attr.name().compare("PointDescription", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("PointDescription"), Qt::CaseInsensitive) == 0) {
       wpt_tmp->description = attrstr.trimmed();
-    } else if (attr.name().compare("ViaStation", Qt::CaseInsensitive) == 0 &&
-               attr.value().compare("true", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("ViaStation"), Qt::CaseInsensitive) == 0 &&
+               attr.value().compare(QLatin1String("true"), Qt::CaseInsensitive) == 0) {
       wpt_tmp->wpt_flags.fmt_use = 1;  /* only a flag */
 
       /* new in TEF V2 */
-    } else if (attr.name().compare("Instruction", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("Instruction"), Qt::CaseInsensitive) == 0) {
       wpt_tmp->description = attrstr.trimmed();
-    } else if (attr.name().compare("Altitude", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("Altitude"), Qt::CaseInsensitive) == 0) {
       wpt_tmp->altitude = attrstr.toDouble();
-    } else if (attr.name().compare("TimeStamp", Qt::CaseInsensitive) == 0) {
+    } else if (attr.name().compare(QLatin1String("TimeStamp"), Qt::CaseInsensitive) == 0) {
       /* nothing for the moment */
     }
   }
