#
# Definitely a kludge, but build mkshort in a way that the output can be run
# and visually inspected. Unlikely to work for anyone but robert.
#

c++ \
  -DTEST_MKSHORT \
  -DCSVFMTS_ENABLED \
  -DFILTERS_ENABLED \
  -DHAVE_LIBUSB_1_0 \
  -DLIBUSB_H_INCLUDE=\"mac/libusb/libusb.h\" \
  -DMAXIMAL_ENABLED \
  -DQT_CORE5COMPAT_LIB \
  -DQT_CORE_LIB \
  -DQT_NO_DEBUG \
  -DSHAPELIB_ENABLED \
  -I. \
  -isystem /opt/homebrew/opt/qt/lib/QtCore.framework/Headers -iframework /opt/homebrew/opt/qt/lib -isystem /opt/homebrew/opt/qt/share/qt/mkspecs/macx-clang -isystem /opt/homebrew/opt/qt/include -isystem /opt/homebrew/opt/qt/lib/QtCore5Compat.framework/Headers -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk \
  -Wall \
  -Wsign-compare \
  -std=gnu++17 \
  -Winvalid-pch \
  -Xarch_arm64 \
  -include/Users/robertlipe/src/gpsbabel/CMakeFiles/gpsbabel.dir/cmake_pch_arm64.hxx \
   -o short_test \
   mkshort.cc util.cc fatal.cc \
  -F/opt/homebrew/opt/qt/lib \
  -Wl,-rpath,/opt/homebrew/opt/qt/lib /opt/homebrew/opt/qt/lib/QtCore5Compat.framework/Versions/A/QtCore5Compat libshp.a \
  libz.a libusb-1.0.a \
  /opt/homebrew/opt/qt/lib/QtCore.framework/Versions/A/QtCore \
  -framework DiskArbitration -lobjc \
  -framework IOKit \
  -framework CoreFoundation \
  -framework Security


#   -MD -MT CMakeFiles/gpsbabel.dir/mkshort.cc.o \
#   -MF CMakeFiles/gpsbabel.dir/mkshort.cc.o.d \
