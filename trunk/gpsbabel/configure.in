#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(GPSBabel, VERSION, BUG-REPORT-ADDRESS)
# AC_CONFIG_SRCDIR([nmea.c])
AC_CONFIG_HEADER([config.h])

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_EXEEXT
AC_SUBST(AC_EXEEXT)

# Checks for libraries.
AC_CHECK_LIB([m], [cos])

AC_ARG_WITH(cet,[--with-cet=(default,all,minimal)],
             cet="$withval", cet="default")

if test "$cet" = "all"; then
   AC_DEFINE(CET_WANTED, 1, [1 for all character sets])
fi
if test "$cet" = "default"; then
   AC_DEFINE(CET_WANTED, 0, [0 for most-used character sets])
fi

AC_DEFINE(SHAPELIB_ENABLED, 1, [1 to enable shapefile support])
AC_DEFINE(PDBFMTS_ENABLED, 1, [1 to enable Palm PDB support])

case "$target" in
    *-*-cygwin* | *-*-mingw32*)

	GBSER=gbser_win.o

	if test "$with_libusb" = no ; then
		AC_MSG_RESULT(USB skipped)
		OSJEEPS=jeeps/gpsusbstub.o
	else
		OSJEEPS=jeeps/gpsusbwin.o
		USB_LIBS=-lsetupapi
	fi
	;;
    *)
	GBSER=gbser_posix.o
	AC_MSG_CHECKING(for libusb)
	if test "$with_libusb" = no ; then
		AC_MSG_RESULT(check not done)
		OSJEEPS=jeeps/gpsusbstub.o
	else
		AC_CHECK_PROG(LIBUSBCONFIG, libusb-config, true, false)
		if test "$LIBUSBCONFIG" = false; then
			AC_MSG_ERROR([libusb-config not found in $PATH])
		fi;
		OLDFLAGS=$LDFLAGS
		OCFLAGS=$CFLAGS
		LDFLAGS="$LDFLAGS `libusb-config --libs`"
		CFLAGS="$OCFLAGS `libusb-config --cflags`"

		AC_CHECK_LIB([usb], [usb_interrupt_read],
			AC_DEFINE(HAVE_LIBUSB, 1, [Defined if you have libusb])
			[USB_CFLAGS="`libusb-config --cflags`"]
			[USB_LIBS="`libusb-config --libs`"],
			[AC_MSG_ERROR([libusb >= 0.1.8 is needed])]
			)
		# Override libusb for Darwin to reduce external 
		# runtime requirement.
		case "$target" in
		*-*-darwin*)
		  if test "x$ac_cv_lib_usb_usb_interrupt_read" = "xyes" ; then
			USB_LIBS="`libusb-config --prefix`/lib/libusb.a -framework  IOKit -framework CoreFoundation"
		  fi
		esac
		OSJEEPS=jeeps/gpslibusb.o
		CFLAGS="$OCFLAGS"
	#	LIBS="$LIBS `libusb-config --libs`"
	fi
	;;
esac

AC_SUBST(USB_LIBS)
AC_SUBST(USB_CFLAGS)
AC_SUBST(OSJEEPS)
AC_SUBST(GBSER)

AC_MSG_CHECKING(for random stuff to make you feel better)
AC_MSG_RESULT(failed)

AC_MSG_CHECKING(for libexpat)
if test "$with_libexpat" = no ; then
	AC_MSG_RESULT(check not done)
else

# Special case fink test.
	case "$target" in
	*-*-darwin*)
		if test -f /sw/include/expat.h -a -f /sw/include/expat.h; then
			CFLAGS="$CFLAGS -I/sw/include"
			LDFLAGS="$LDFLAGS -L/sw/lib"
			# Static link against expat archive, not dyn lib.
			AC_DEFINE(HAVE_LIBEXPAT, 1, [Defined if you have libexpat])
			EXPAT_LIB=/sw/lib/libexpat.a
		fi
		;;
	*)
		AC_CHECK_LIB([expat], [XML_ParserCreate], 
			AC_DEFINE(HAVE_LIBEXPAT, 1, [Defined if you have libexpat])
			[EXPAT_LIB="$LDFLAGS -lexpat"])

		;;
	esac
fi
AC_SUBST(EXPAT_LIB)

# Checks for header files.
# AC_HEADER_STDC

# AC_CHECK_HEADERS([fcntl.h inttypes.h libintl.h limits.h malloc.h stddef.h stdint.h stdlib.h string.h strings.h sys/ioctl.h sys/time.h termios.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
# AC_C_CONST
# AC_C_INLINE
# AC_TYPE_OFF_T
# AC_TYPE_SIZE_T
# AC_HEADER_TIME
# AC_STRUCT_TM
# AC_STRUCT_TIMEZONE

# Checks for library functions.
# AC_FUNC_MALLOC
# AC_FUNC_MEMCMP
# AC_FUNC_MKTIME
# AC_FUNC_REALLOC
# AC_FUNC_SELECT_ARGTYPES
# AC_FUNC_STRFTIME
# AC_FUNC_STRTOD
# AC_FUNC_VPRINTF
# AC_CHECK_FUNCS([atexit floor localtime_r memmove memset pow select sqrt strchr strcspn strdup strerror strncasecmp strrchr strspn strstr strtol strtoul])
AC_CHECK_FUNCS([nanosleep sleep])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
