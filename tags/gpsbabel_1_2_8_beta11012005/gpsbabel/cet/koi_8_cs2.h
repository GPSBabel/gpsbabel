/*

    Data automatically generated from recode output:

        'recode -lf "KOI-8_CS2" 2>/dev/null'


    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111 USA

*/

#ifndef koi_8_cs2_h
#define koi_8_cs2_h

#define cet_cs_name_koi_8_cs2 "KOI-8_CS2"

const char *cet_cs_alias_koi_8_cs2[] = 
{
	"KOI-8_CS2", NULL
};

#define cet_ucs4_ofs_koi_8_cs2 36
#define cet_ucs4_cnt_koi_8_cs2 219

const int cet_ucs4_map_koi_8_cs2[cet_ucs4_cnt_koi_8_cs2] =
{
	0x00a4, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 
	0x002c, 0x002d, 0x002e, 0x002f, 0x0030, 0x0031, 0x0032, 0x0033, 
	0x0034, 0x0035, 0x0036, 0x0037, 0x0038, 0x0039, 0x003a, 0x003b, 
	0x003c, 0x003d, 0x003e, 0x003f, 0x0040, 0x0041, 0x0042, 0x0043, 
	0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004a, 0x004b, 
	0x004c, 0x004d, 0x004e, 0x004f, 0x0050, 0x0051, 0x0052, 0x0053, 
	0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005a, 0x005b, 
	0x005c, 0x005d, 0x005e, 0x005f, 0x0060, 0x0061, 0x0062, 0x0063, 
	0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006a, 0x006b, 
	0x006c, 0x006d, 0x006e, 0x006f, 0x0070, 0x0071, 0x0072, 0x0073, 
	0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007a, 0x007b, 
	0x007c, 0x007d, 0x007e, 0x007f, 0x0080, 0x0081, 0x0082, 0x0083, 
	0x0084, 0x0085, 0x0086, 0x0087, 0x0088, 0x0089, 0x008a, 0x008b, 
	0x008c, 0x008d, 0x008e, 0x008f, 0x0090, 0x0091, 0x0092, 0x0093, 
	0x0094, 0x0095, 0x0096, 0x0097, 0x0098, 0x0099, 0x009a, 0x009b, 
	0x009c, 0x009d, 0x009e, 0x009f, 0x00a0,     -1, 0x00b4,     -1, 
	0x007e,     -1, 0x02d8, 0x02d9, 0x00a8,     -1, 0x02da, 0x00b8, 
	    -1, 0x02dd, 0x02db, 0x02c7, 0x00a9, 0x2122, 0x250c, 0x2510, 
	0x2514, 0x2518, 0x2500, 0x2193, 0x03a9, 0x00a7, 0x03b1, 0x03b3, 
	0x03b5, 0x03bc, 0x03c0, 0x03c9, 0x00e0, 0x00e1, 0x01ce, 0x010d, 
	0x010f, 0x011b, 0x0155,     -1, 0x00fc, 0x00ed, 0x016f, 0x013a, 
	0x013e, 0x00f6, 0x0148, 0x00f3, 0x00f4, 0x00e4, 0x0159, 0x0161, 
	0x0165, 0x00fa, 0x00eb, 0x00e9, 0x0171, 0x00fd, 0x017e,     -1, 
	    -1, 0x0151, 0x0117, 0x00df, 0x00c0, 0x00c1, 0x01cd, 0x010c, 
	0x010e, 0x011a, 0x0154,     -1, 0x00dc, 0x00cd, 0x016e, 0x0139, 
	0x013d, 0x00d6, 0x0147, 0x00d3, 0x00d4, 0x00c4, 0x0158, 0x0160, 
	0x0164, 0x00da, 0x00cb, 0x00c9, 0x0170, 0x00dd, 0x017d,     -1, 
	    -1, 0x0150, 0x0116
};

#define cet_ucs4_to_koi_8_cs2_ct 82

const cet_ucs4_link_t cet_ucs4_to_koi_8_cs2_links[cet_ucs4_to_koi_8_cs2_ct] =
{
	 {0x007e, 0xa4} /* tilde */,
	 {0x00a4, 0x24} /* sign */,
	 {0x00a7, 0xb9} /* sign */,
	 {0x00a9, 0xb0} /* sign */,
	 {0x00b4, 0xa2} /* accent */,
	 {0x00b8, 0xab} /* cedilla */,
	 {0x00c0, 0xe0} /* capital letter a with grave */,
	 {0x00c1, 0xe1} /* capital letter a with acute */,
	 {0x00c4, 0xf1} /* capital letter a with diaeresis */,
	 {0x00c9, 0xf7} /* capital letter e with acute */,
	 {0x00cb, 0xf6} /* capital letter e with diaeresis */,
	 {0x00cd, 0xe9} /* capital letter i with acute */,
	 {0x00d3, 0xef} /* capital letter o with acute */,
	 {0x00d4, 0xf0} /* capital letter o with circumflex */,
	 {0x00d6, 0xed} /* capital letter o with diaeresis */,
	 {0x00da, 0xf5} /* capital letter u with acute */,
	 {0x00dc, 0xe8} /* capital letter u with diaeresis */,
	 {0x00dd, 0xf9} /* capital letter y with acute */,
	 {0x00e0, 0xc0} /* small letter a with grave */,
	 {0x00e1, 0xc1} /* small letter a with acute */,
	 {0x00e4, 0xd1} /* small letter a with diaeresis */,
	 {0x00e9, 0xd7} /* small letter e with acute */,
	 {0x00eb, 0xd6} /* small letter e with diaeresis */,
	 {0x00ed, 0xc9} /* small letter i with acute */,
	 {0x00f3, 0xcf} /* small letter o with acute */,
	 {0x00f4, 0xd0} /* small letter o with circumflex */,
	 {0x00f6, 0xcd} /* small letter o with diaeresis */,
	 {0x00fa, 0xd5} /* small letter u with acute */,
	 {0x00fc, 0xc8} /* small letter u with diaeresis */,
	 {0x00fd, 0xd9} /* small letter y with acute */,
	 {0x010c, 0xe3} /* capital letter c with caron */,
	 {0x010d, 0xc3} /* small letter c with caron */,
	 {0x010e, 0xe4} /* capital letter d with caron */,
	 {0x010f, 0xc4} /* small letter d with caron */,
	 {0x0116, 0xfe} /* capital letter e with dot above */,
	 {0x0117, 0xde} /* small letter e with dot above */,
	 {0x011a, 0xe5} /* capital letter e with caron */,
	 {0x011b, 0xc5} /* small letter e with caron */,
	 {0x0139, 0xeb} /* capital letter l with acute */,
	 {0x013a, 0xcb} /* small letter l with acute */,
	 {0x013d, 0xec} /* capital letter l with caron */,
	 {0x013e, 0xcc} /* small letter l with caron */,
	 {0x0147, 0xee} /* capital letter n with caron */,
	 {0x0148, 0xce} /* small letter n with caron */,
	 {0x0150, 0xfd} /* capital letter o with double acute */,
	 {0x0151, 0xdd} /* small letter o with double acute */,
	 {0x0154, 0xe6} /* capital letter r with acute */,
	 {0x0155, 0xc6} /* small letter r with acute */,
	 {0x0158, 0xf2} /* capital letter r with caron */,
	 {0x0159, 0xd2} /* small letter r with caron */,
	 {0x0160, 0xf3} /* capital letter s with caron */,
	 {0x0161, 0xd3} /* small letter s with caron */,
	 {0x0164, 0xf4} /* capital letter t with caron */,
	 {0x0165, 0xd4} /* small letter t with caron */,
	 {0x016e, 0xea} /* capital letter u with ring above */,
	 {0x016f, 0xca} /* small letter u with ring above */,
	 {0x0170, 0xf8} /* capital letter u with double acute */,
	 {0x0171, 0xd8} /* small letter u with double acute */,
	 {0x017d, 0xfa} /* capital letter z with caron */,
	 {0x017e, 0xda} /* small letter z with caron */,
	 {0x01cd, 0xe2} /* capital letter a with caron */,
	 {0x01ce, 0xc2} /* small letter a with caron */,
	 {0x02c7, 0xaf} /* caron */,
	 {0x02d8, 0xa6} /* breve */,
	 {0x02d9, 0xa7} /* above */,
	 {0x02da, 0xaa} /* above */,
	 {0x02db, 0xae} /* ogonek */,
	 {0x02dd, 0xad} /* acute accent */,
	 {0x03a9, 0xb8} /* capital letter omega */,
	 {0x03b1, 0xba} /* small letter alpha */,
	 {0x03b3, 0xbb} /* small letter gamma */,
	 {0x03b5, 0xbc} /* small letter epsilon */,
	 {0x03bc, 0xbd} /* small letter mu */,
	 {0x03c0, 0xbe} /* small letter pi */,
	 {0x03c9, 0xbf} /* small letter omega */,
	 {0x2122, 0xb1} /* mark sign */,
	 {0x2193, 0xb7} /* arrow */,
	 {0x2500, 0xb6} /* drawings light horizontal */,
	 {0x250c, 0xb2} /* drawings light down and right */,
	 {0x2510, 0xb3} /* drawings light down and left */,
	 {0x2514, 0xb4} /* drawings light up and right */,
	 {0x2518, 0xb5} /* drawings light up and left */
};

/*
#define cet_ucs4_to_koi_8_cs2_extra_ct 0
const cet_ucs4_link_t cet_ucs4_to_koi_8_cs2_extra[cet_ucs4_to_koi_8_cs2_extra_ct] = {};
*/

cet_cs_vec_t cet_cs_vec_koi_8_cs2 =	/* defined in cet.h */
{	
	cet_cs_name_koi_8_cs2,		/* name of character set	*/
	cet_cs_alias_koi_8_cs2,		/* alias table			*/

	NULL,				/* ... to UCS-4 converter (multi-byte) */
	NULL,				/* UCS-4 to ... converter (multi-byte) */

	cet_ucs4_map_koi_8_cs2,		/* char to UCS-4 value table	*/
	cet_ucs4_ofs_koi_8_cs2,		/* first non standard character	*/
	cet_ucs4_cnt_koi_8_cs2,		/* number of values in table	*/

	cet_ucs4_to_koi_8_cs2_links,	/* UCS-4 to char links		*/
	cet_ucs4_to_koi_8_cs2_ct,		/* number of links		*/

	NULL,				/* hand made UCS-4 links	*/
	0,				/* number of extra links	*/

	NULL	/* for internal use */
};


/*
const int koi_8_cs2_ucs4_full_map[] =
{
	0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 
	0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 
	0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 
	0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 
	0x0020, 0x0021, 0x0022, 0x0023, 0x00a4, 0x0025, 0x0026, 0x0027, 
	0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f, 
	0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
	0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f, 
	0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 
	0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f, 
	0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 
	0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e, 0x005f, 
	0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
	0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f, 
	0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 
	0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x007f, 
	0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x0085, 0x0086, 0x0087, 
	0x0088, 0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 0x008e, 0x008f, 
	0x0090, 0x0091, 0x0092, 0x0093, 0x0094, 0x0095, 0x0096, 0x0097, 
	0x0098, 0x0099, 0x009a, 0x009b, 0x009c, 0x009d, 0x009e, 0x009f, 
	0x00a0,     -1, 0x00b4,     -1, 0x007e,     -1, 0x02d8, 0x02d9, 
	0x00a8,     -1, 0x02da, 0x00b8,     -1, 0x02dd, 0x02db, 0x02c7, 
	0x00a9, 0x2122, 0x250c, 0x2510, 0x2514, 0x2518, 0x2500, 0x2193, 
	0x03a9, 0x00a7, 0x03b1, 0x03b3, 0x03b5, 0x03bc, 0x03c0, 0x03c9, 
	0x00e0, 0x00e1, 0x01ce, 0x010d, 0x010f, 0x011b, 0x0155,     -1, 
	0x00fc, 0x00ed, 0x016f, 0x013a, 0x013e, 0x00f6, 0x0148, 0x00f3, 
	0x00f4, 0x00e4, 0x0159, 0x0161, 0x0165, 0x00fa, 0x00eb, 0x00e9, 
	0x0171, 0x00fd, 0x017e,     -1,     -1, 0x0151, 0x0117, 0x00df, 
	0x00c0, 0x00c1, 0x01cd, 0x010c, 0x010e, 0x011a, 0x0154,     -1, 
	0x00dc, 0x00cd, 0x016e, 0x0139, 0x013d, 0x00d6, 0x0147, 0x00d3, 
	0x00d4, 0x00c4, 0x0158, 0x0160, 0x0164, 0x00da, 0x00cb, 0x00c9, 
	0x0170, 0x00dd, 0x017d,     -1,     -1, 0x0150, 0x0116,     -1
};
*/

#endif
