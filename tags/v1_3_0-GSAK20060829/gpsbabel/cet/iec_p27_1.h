/*

    Data automatically generated from recode output:

        'recode -lf "IEC_P27-1" 2>/dev/null'


    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111 USA

*/

#ifndef iec_p27_1_h
#define iec_p27_1_h

#define cet_cs_name_iec_p27_1 "IEC_P27-1"

const char *cet_cs_alias_iec_p27_1[] = 
{
	"IEC_P27-1", "iso-ir-143", NULL
};

#define cet_ucs4_ofs_iec_p27_1 160
#define cet_ucs4_cnt_iec_p27_1 96

const int cet_ucs4_map_iec_p27_1[cet_ucs4_cnt_iec_p27_1] =
{
	0x02c7, 0x2261, 0x2227, 0x2228, 0x2229, 0x222a, 0x2282, 0x2283, 
	0x21d0, 0x21d2, 0x2234, 0x2235, 0x2208, 0x220b, 0x2286, 0x2287, 
	0x222b, 0x222e, 0x221e, 0x2207, 0x2202, 0x223c, 0x2248, 0x2243, 
	0x2245, 0x2264, 0x2260, 0x2265, 0x2194, 0x00ac, 0x2200, 0x2203, 
	0x05d0, 0x25a1, 0x2225, 0x0393, 0x0394, 0x22a5, 0x2220, 0x221f, 
	0x0398, 0x2329, 0x232a, 0x039b, 0x2032, 0x2033, 0x039e, 0x2213, 
	0x03a0, 0x00b2, 0x03a3, 0x00d7, 0x00b3, 0x03a5, 0x03a6, 0x00b7, 
	0x03a8, 0x03a9, 0x2205, 0x21c0, 0x221a, 0x0192, 0x221d, 0x00b1, 
	0x00b0, 0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6, 0x03b7, 
	0x03b8, 0x03b9, 0x03ba, 0x03bb, 0x03bc, 0x03bd, 0x03be, 0x2030, 
	0x03c0, 0x03c1, 0x03c3, 0x00f7, 0x03c4, 0x03c5, 0x03c6, 0x03c7, 
	0x03c8, 0x03c9, 0x2020, 0x2190, 0x2191, 0x2192, 0x2193, 0x203e
};

#define cet_ucs4_to_iec_p27_1_ct 96

const cet_ucs4_link_t cet_ucs4_to_iec_p27_1_links[cet_ucs4_to_iec_p27_1_ct] =
{
	 {0x00ac, 0xbd} /* sign */,
	 {0x00b0, 0xe0} /* sign */,
	 {0x00b1, 0xdf} /* sign */,
	 {0x00b2, 0xd1} /* two */,
	 {0x00b3, 0xd4} /* three */,
	 {0x00b7, 0xd7} /* dot */,
	 {0x00d7, 0xd3} /* sign */,
	 {0x00f7, 0xf3} /* sign */,
	 {0x0192, 0xdd} /* minuscule latine f hameçon */,
	 {0x02c7, 0xa0} /* caron */,
	 {0x0393, 0xc3} /* capital letter gamma */,
	 {0x0394, 0xc4} /* capital letter delta */,
	 {0x0398, 0xc8} /* capital letter theta */,
	 {0x039b, 0xcb} /* capital letter lamda */,
	 {0x039e, 0xce} /* capital letter xi */,
	 {0x03a0, 0xd0} /* capital letter pi */,
	 {0x03a3, 0xd2} /* capital letter sigma */,
	 {0x03a5, 0xd5} /* capital letter upsilon */,
	 {0x03a6, 0xd6} /* capital letter phi */,
	 {0x03a8, 0xd8} /* capital letter psi */,
	 {0x03a9, 0xd9} /* capital letter omega */,
	 {0x03b1, 0xe1} /* small letter alpha */,
	 {0x03b2, 0xe2} /* small letter beta */,
	 {0x03b3, 0xe3} /* small letter gamma */,
	 {0x03b4, 0xe4} /* small letter delta */,
	 {0x03b5, 0xe5} /* small letter epsilon */,
	 {0x03b6, 0xe6} /* small letter zeta */,
	 {0x03b7, 0xe7} /* small letter eta */,
	 {0x03b8, 0xe8} /* small letter theta */,
	 {0x03b9, 0xe9} /* small letter iota */,
	 {0x03ba, 0xea} /* small letter kappa */,
	 {0x03bb, 0xeb} /* small letter lamda */,
	 {0x03bc, 0xec} /* small letter mu */,
	 {0x03bd, 0xed} /* small letter nu */,
	 {0x03be, 0xee} /* small letter xi */,
	 {0x03c0, 0xf0} /* small letter pi */,
	 {0x03c1, 0xf1} /* small letter rho */,
	 {0x03c3, 0xf2} /* small letter sigma */,
	 {0x03c4, 0xf4} /* small letter tau */,
	 {0x03c5, 0xf5} /* small letter upsilon */,
	 {0x03c6, 0xf6} /* small letter phi */,
	 {0x03c7, 0xf7} /* small letter chi */,
	 {0x03c8, 0xf8} /* small letter psi */,
	 {0x03c9, 0xf9} /* small letter omega */,
	 {0x05d0, 0xc0} /* letter alef */,
	 {0x2020, 0xfa} /* dagger */,
	 {0x2030, 0xef} /* mille sign */,
	 {0x2032, 0xcc} /* prime */,
	 {0x2033, 0xcd} /* prime */,
	 {0x203e, 0xff} /* overline */,
	 {0x2190, 0xfb} /* arrow */,
	 {0x2191, 0xfc} /* arrow */,
	 {0x2192, 0xfd} /* arrow */,
	 {0x2193, 0xfe} /* arrow */,
	 {0x2194, 0xbc} /* right arrow */,
	 {0x21c0, 0xdb} /* vector above (iso-10646-1dis 032/032/038/046) */,
	 {0x21d0, 0xa8} /* double arrow */,
	 {0x21d2, 0xa9} /* double arrow */,
	 {0x2200, 0xbe} /* all */,
	 {0x2202, 0xb4} /* differential */,
	 {0x2203, 0xbf} /* exists */,
	 {0x2205, 0xda} /* set */,
	 {0x2207, 0xb3} /* nabla */,
	 {0x2208, 0xac} /* of */,
	 {0x220b, 0xad} /* as member */,
	 {0x2213, 0xcf} /* sign */,
	 {0x221a, 0xdc} /* root */,
	 {0x221d, 0xde} /* to */,
	 {0x221e, 0xb2} /* infinity */,
	 {0x221f, 0xc7} /* angle */,
	 {0x2220, 0xc6} /* angle */,
	 {0x2225, 0xc2} /* to */,
	 {0x2227, 0xa2} /* and */,
	 {0x2228, 0xa3} /* or */,
	 {0x2229, 0xa4} /* intersection */,
	 {0x222a, 0xa5} /* union */,
	 {0x222b, 0xb0} /* integral */,
	 {0x222e, 0xb1} /* integral */,
	 {0x2234, 0xaa} /* therefore */,
	 {0x2235, 0xab} /* because */,
	 {0x223c, 0xb5} /* operator */,
	 {0x2243, 0xb7} /* equal to */,
	 {0x2245, 0xb8} /* equal to */,
	 {0x2248, 0xb6} /* equal to */,
	 {0x2260, 0xba} /* equal to */,
	 {0x2261, 0xa1} /* to */,
	 {0x2264, 0xb9} /* or equal to */,
	 {0x2265, 0xbb} /* or equal to */,
	 {0x2282, 0xa6} /* of */,
	 {0x2283, 0xa7} /* of */,
	 {0x2286, 0xae} /* of or equal to */,
	 {0x2287, 0xaf} /* of or equal to */,
	 {0x22a5, 0xc5} /* tack */,
	 {0x2329, 0xc9} /* angle bracket */,
	 {0x232a, 0xca} /* angle bracket */,
	 {0x25a1, 0xc1} /* square */
};

/*
#define cet_ucs4_to_iec_p27_1_extra_ct 0
const cet_ucs4_link_t cet_ucs4_to_iec_p27_1_extra[cet_ucs4_to_iec_p27_1_extra_ct] = {};
*/

cet_cs_vec_t cet_cs_vec_iec_p27_1 =	/* defined in cet.h */
{	
	cet_cs_name_iec_p27_1,		/* name of character set	*/
	cet_cs_alias_iec_p27_1,		/* alias table			*/

	NULL,				/* ... to UCS-4 converter (multi-byte) */
	NULL,				/* UCS-4 to ... converter (multi-byte) */

	cet_ucs4_map_iec_p27_1,		/* char to UCS-4 value table	*/
	cet_ucs4_ofs_iec_p27_1,		/* first non standard character	*/
	cet_ucs4_cnt_iec_p27_1,		/* number of values in table	*/

	cet_ucs4_to_iec_p27_1_links,	/* UCS-4 to char links		*/
	cet_ucs4_to_iec_p27_1_ct,		/* number of links		*/

	NULL,				/* hand made UCS-4 links	*/
	0,				/* number of extra links	*/

	NULL	/* for internal use */
};


/*
const int iec_p27_1_ucs4_full_map[] =
{
	0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 
	0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 
	0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 
	0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 
	0x0020, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027, 
	0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f, 
	0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
	0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f, 
	0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 
	0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f, 
	0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 
	0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e, 0x005f, 
	0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
	0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f, 
	0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 
	0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x007f, 
	0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x0085, 0x0086, 0x0087, 
	0x0088, 0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 0x008e, 0x008f, 
	0x0090, 0x0091, 0x0092, 0x0093, 0x0094, 0x0095, 0x0096, 0x0097, 
	0x0098, 0x0099, 0x009a, 0x009b, 0x009c, 0x009d, 0x009e, 0x009f, 
	0x02c7, 0x2261, 0x2227, 0x2228, 0x2229, 0x222a, 0x2282, 0x2283, 
	0x21d0, 0x21d2, 0x2234, 0x2235, 0x2208, 0x220b, 0x2286, 0x2287, 
	0x222b, 0x222e, 0x221e, 0x2207, 0x2202, 0x223c, 0x2248, 0x2243, 
	0x2245, 0x2264, 0x2260, 0x2265, 0x2194, 0x00ac, 0x2200, 0x2203, 
	0x05d0, 0x25a1, 0x2225, 0x0393, 0x0394, 0x22a5, 0x2220, 0x221f, 
	0x0398, 0x2329, 0x232a, 0x039b, 0x2032, 0x2033, 0x039e, 0x2213, 
	0x03a0, 0x00b2, 0x03a3, 0x00d7, 0x00b3, 0x03a5, 0x03a6, 0x00b7, 
	0x03a8, 0x03a9, 0x2205, 0x21c0, 0x221a, 0x0192, 0x221d, 0x00b1, 
	0x00b0, 0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6, 0x03b7, 
	0x03b8, 0x03b9, 0x03ba, 0x03bb, 0x03bc, 0x03bd, 0x03be, 0x2030, 
	0x03c0, 0x03c1, 0x03c3, 0x00f7, 0x03c4, 0x03c5, 0x03c6, 0x03c7, 
	0x03c8, 0x03c9, 0x2020, 0x2190, 0x2191, 0x2192, 0x2193, 0x203e
};
*/

#endif
