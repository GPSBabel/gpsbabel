name: gpsbabel # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: "Convert, manipulate and transfer GPS data"
description: |
  Convert, manipulate and transfer data from GPS programs or GPS
  recievers.  Open source and supported on macOS, Windows and Linux.

license: GPL-2.0
title: GPSBabel
source-code: https://github.com/GPSBabel/gpsbabel.git
website: https://www.gpsbabel.org

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

apps:
  gpsbabel:
    plugs:
      - home
      - raw-usb
      - removable-media
      - serial-port
    command-chain:
      - bin/graphics-core22-wrapper
    command: usr/bin/gpsbabel
  gpsbabelfe:
    plugs:
      - home
      - removable-media
      - network
      - opengl
      - wayland
      - x11
    command-chain:
      - usr/bin/gpsbabelfe.sh
      - bin/graphics-core22-wrapper
    command: usr/bin/gpsbabelfe
    environment:
#      QT_DEBUG_PLUGINS: 1

plugs:
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22

# remap the ubuntu qt6 install directories to the snap.
layout:
  /usr/share/qt6:
    symlink: $SNAP/usr/share/qt6
  /usr/lib/qt6:
    symlink: $SNAP/usr/lib/qt6
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt6:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt6
  /usr/share/libdrm:
    bind: $SNAP/graphics/usr/share/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/graphics/usr/share/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/graphics/usr/share/X11/XErrorDB
  /usr/share/X11/locale:
    symlink: $SNAP/graphics/usr/share/X11/locale
# XKB_CONFIG_ROOT, QT_XKB_CONFIG_ROOT not enough to prevent "xkbcommon: ERROR: Couldn't find file "rules/evdev" in include paths"
# to overcome this symlink /usr/share/X11/xkb
# see https://bugreports.qt.io/browse/QTBUG-105124
  /usr/share/X11/xkb:
    symlink: $SNAP/usr/share/X11/xkb

adopt-info: gpsbabel
parts:
  gpsbabel:
    # See 'snapcraft plugins'
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DGPSBABEL_WITH_ZLIB=pkgconfig
      - -DGPSBABEL_WITH_SHAPELIB=pkgconfig
    cmake-generator: Ninja
    source: .
    override-pull: |
      craftctl default
      # add install command to CMakeLists.txt
      echo "install(TARGETS gpsbabel gpsbabelfe CONFIGURATIONS Release RUNTIME DESTINATION /usr/bin)" >> CMakeLists.txt
      echo "install(PROGRAMS snap/local/gpsbabelfe.sh DESTINATION /usr/bin)" >> CMakeLists.txt
      # jam repo sha into GITHUB_SHA
      sed -i -e"/GB.SHA/i set(ENV{GITHUB_SHA} \"$(git log -1 --format=%h)\")" gbversion.cmake
      # set snap version
      # ensure version has at most 32 characters
      craftctl set version=$(git log -1 --format='LinuxInstaller-%ad-%h' --date=format:%Y%m%d)
    build-packages:
      - git
      - vim
      - g++
      - ninja-build
      - zlib1g-dev
      - libshp-dev
      - libusb-1.0-0-dev
      - pkg-config
      - libudev-dev
      - qt6-base-dev
      - libqt6core5compat6-dev
      - libqt6opengl6-dev
      - libqt6serialport6-dev
      - libqt6webenginecore6-bin
      - libgl-dev
      - libopengl-dev
      - libvulkan-dev
      - libx11-xcb-dev
      - libxkbcommon-dev
      - qt6-l10n-tools
      - qt6-tools-dev
      - qt6-tools-dev-tools
      - qt6-translations-l10n
      - qt6-webengine-dev
      - qt6-webengine-dev-tools
      - qt6-wayland
    stage-packages:
      - zlib1g
      - libshp2
      - libusb-1.0-0
      - libqt6core6
      - libqt6core5compat6
      - libqt6gui6
      - libqt6network6
      - libqt6serialport6
      - libqt6widgets6
      - libqt6xml6
      - libqt6webenginewidgets6
      - libqt6webchannel6
      - libqt6webengine6-data
      - libqt6webenginecore6-bin
      - qt6-translations-l10n
      - qt6-qpa-plugins
      - qt6-wayland

  graphics-core22:
    after: [gpsbabel]
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
    prime:
      - bin/graphics-core22-wrapper
