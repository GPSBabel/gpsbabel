/*

    Data automatically generated from recode output:

        'recode -lf "CP1250" 2>/dev/null'


    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111 USA

*/

#ifndef cp1250_h
#define cp1250_h

#define cet_cs_name_cp1250 "CP1250"

const char *cet_cs_alias_cp1250[] = 
{
	"CP1250", "1250", "ms-ee", "windows-1250", "WIN-CP1250",
	NULL
};

#define cet_ucs4_ofs_cp1250 128
#define cet_ucs4_cnt_cp1250 128

const int cet_ucs4_map_cp1250[cet_ucs4_cnt_cp1250] =
{
	0x20ac,     -1, 0x201a,     -1, 0x201e, 0x2026, 0x2020, 0x2021, 
	    -1, 0x2030, 0x0160, 0x2039, 0x015a, 0x0164, 0x017d, 0x0179, 
	    -1, 0x2018, 0x2019, 0x201c, 0x201d, 0x2022, 0x2013, 0x2014, 
	    -1, 0x2122, 0x0161, 0x203a, 0x015b, 0x0165, 0x017e, 0x017a, 
	0x00a0, 0x02c7, 0x02d8, 0x0141, 0x00a4, 0x0104, 0x00a6, 0x00a7, 
	0x00a8, 0x00a9, 0x015e, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x017b, 
	0x00b0, 0x00b1, 0x02db, 0x0142, 0x00b4, 0x00b5, 0x00b6, 0x00b7, 
	0x00b8, 0x0105, 0x015f, 0x00bb, 0x013d, 0x02dd, 0x013e, 0x017c, 
	0x0154, 0x00c1, 0x00c2, 0x0102, 0x00c4, 0x0139, 0x0106, 0x00c7, 
	0x010c, 0x00c9, 0x0118, 0x00cb, 0x011a, 0x00cd, 0x00ce, 0x010e, 
	0x0110, 0x0143, 0x0147, 0x00d3, 0x00d4, 0x0150, 0x00d6, 0x00d7, 
	0x0158, 0x016e, 0x00da, 0x0170, 0x00dc, 0x00dd, 0x0162, 0x00df, 
	0x0155, 0x00e1, 0x00e2, 0x0103, 0x00e4, 0x013a, 0x0107, 0x00e7, 
	0x010d, 0x00e9, 0x0119, 0x00eb, 0x011b, 0x00ed, 0x00ee, 0x010f, 
	0x0111, 0x0144, 0x0148, 0x00f3, 0x00f4, 0x0151, 0x00f6, 0x00f7, 
	0x0159, 0x016f, 0x00fa, 0x0171, 0x00fc, 0x00fd, 0x0163, 0x02d9
};

#define cet_ucs4_to_cp1250_ct 74

const cet_ucs4_link_t cet_ucs4_to_cp1250_links[cet_ucs4_to_cp1250_ct] =
{
	 {0x0102, 0xc3} /* capital letter a with breve */,
	 {0x0103, 0xe3} /* small letter a with breve */,
	 {0x0104, 0xa5} /* capital letter a with ogonek */,
	 {0x0105, 0xb9} /* small letter a with ogonek */,
	 {0x0106, 0xc6} /* capital letter c with acute */,
	 {0x0107, 0xe6} /* small letter c with acute */,
	 {0x010c, 0xc8} /* capital letter c with caron */,
	 {0x010d, 0xe8} /* small letter c with caron */,
	 {0x010e, 0xcf} /* capital letter d with caron */,
	 {0x010f, 0xef} /* small letter d with caron */,
	 {0x0110, 0xd0} /* capital letter d with stroke */,
	 {0x0111, 0xf0} /* small letter d with stroke */,
	 {0x0118, 0xca} /* capital letter e with ogonek */,
	 {0x0119, 0xea} /* small letter e with ogonek */,
	 {0x011a, 0xcc} /* capital letter e with caron */,
	 {0x011b, 0xec} /* small letter e with caron */,
	 {0x0139, 0xc5} /* capital letter l with acute */,
	 {0x013a, 0xe5} /* small letter l with acute */,
	 {0x013d, 0xbc} /* capital letter l with caron */,
	 {0x013e, 0xbe} /* small letter l with caron */,
	 {0x0141, 0xa3} /* capital letter l with stroke */,
	 {0x0142, 0xb3} /* small letter l with stroke */,
	 {0x0143, 0xd1} /* capital letter n with acute */,
	 {0x0144, 0xf1} /* small letter n with acute */,
	 {0x0147, 0xd2} /* capital letter n with caron */,
	 {0x0148, 0xf2} /* small letter n with caron */,
	 {0x0150, 0xd5} /* capital letter o with double acute */,
	 {0x0151, 0xf5} /* small letter o with double acute */,
	 {0x0154, 0xc0} /* capital letter r with acute */,
	 {0x0155, 0xe0} /* small letter r with acute */,
	 {0x0158, 0xd8} /* capital letter r with caron */,
	 {0x0159, 0xf8} /* small letter r with caron */,
	 {0x015a, 0x8c} /* capital letter s with acute */,
	 {0x015b, 0x9c} /* small letter s with acute */,
	 {0x015e, 0xaa} /* capital letter s with cedilla */,
	 {0x015f, 0xba} /* small letter s with cedilla */,
	 {0x0160, 0x8a} /* capital letter s with caron */,
	 {0x0161, 0x9a} /* small letter s with caron */,
	 {0x0162, 0xde} /* capital letter t with cedilla */,
	 {0x0163, 0xfe} /* small letter t with cedilla */,
	 {0x0164, 0x8d} /* capital letter t with caron */,
	 {0x0165, 0x9d} /* small letter t with caron */,
	 {0x016e, 0xd9} /* capital letter u with ring above */,
	 {0x016f, 0xf9} /* small letter u with ring above */,
	 {0x0170, 0xdb} /* capital letter u with double acute */,
	 {0x0171, 0xfb} /* small letter u with double acute */,
	 {0x0179, 0x8f} /* capital letter z with acute */,
	 {0x017a, 0x9f} /* small letter z with acute */,
	 {0x017b, 0xaf} /* capital letter z with dot above */,
	 {0x017c, 0xbf} /* small letter z with dot above */,
	 {0x017d, 0x8e} /* capital letter z with caron */,
	 {0x017e, 0x9e} /* small letter z with caron */,
	 {0x02c7, 0xa1} /* caron */,
	 {0x02d8, 0xa2} /* breve */,
	 {0x02d9, 0xff} /* above */,
	 {0x02db, 0xb2} /* ogonek */,
	 {0x02dd, 0xbd} /* acute accent */,
	 {0x2013, 0x96} /* dash */,
	 {0x2014, 0x97} /* dash */,
	 {0x2018, 0x91} /* single quotation mark */,
	 {0x2019, 0x92} /* single quotation mark */,
	 {0x201a, 0x82} /* low-9 quotation mark */,
	 {0x201c, 0x93} /* double quotation mark */,
	 {0x201d, 0x94} /* double quotation mark */,
	 {0x201e, 0x84} /* low-9 quotation mark */,
	 {0x2020, 0x86} /* dagger */,
	 {0x2021, 0x87} /* dagger */,
	 {0x2022, 0x95} /* puce */,
	 {0x2026, 0x85} /* horizontal ellipsis */,
	 {0x2030, 0x89} /* mille sign */,
	 {0x2039, 0x8b} /* left-pointing angle quotation mark */,
	 {0x203a, 0x9b} /* right-pointing angle quotation mark */,
	 {0x20ac, 0x80} /* euro */,
	 {0x2122, 0x99} /* mark sign */
};

/* Extra table was generated from bestfit1250.txt located at
   ftp.unicode.org:/Public/MAPPINGS/VENDORS/MICSFT/WindowsBestFit/ */
  
const cet_ucs4_link_t cet_ucs4_to_cp1250_extra[] = 
{
	{0x0189, 0xd0} /* latin capital letter african d */,
	{0x02bb, 0x91} /* modifier letter turned comma */,
	{0x02c9, 0xaf} /* modifier letter macron */,
	{0x02ca, 0xb4} /* modifier letter acute accent */,
	{0x02da, 0xb0} /* ring above */,
	{0x0301, 0xb4} /* combining acute accent */,
	{0x0304, 0xaf} /* combining macron */,
	{0x0305, 0xaf} /* combining overline */,
	{0x0306, 0xa2} /* combining breve */,
	{0x0307, 0xff} /* combining dot above */,
	{0x0308, 0xa8} /* combining diaeresis */,
	{0x030a, 0xb0} /* combining ring above */,
	{0x030c, 0xa1} /* combining caron */,
	{0x0327, 0xb8} /* combining cedilla */,
	{0x03b2, 0xdf} /* greek small letter beta */,
	{0x03bc, 0xb5} /* greek small letter mu */,
	{0x2024, 0x95} /* one dot leader */,
	{0x2033, 0x94} /* double prime */,
	{0x2070, 0xb0} /* superscript zero */,
	{0x20a4, 0xa3} /* lira sign */,
	{0x212b, 0xc5} /* angstrom sign */,
	{0x2190, 0x8b} /* leftwards arrow */,
	{0x2192, 0x9b} /* rightwards arrow */,
	{0x2193, 0xa1} /* downwards arrow */,
	{0x2205, 0xd8} /* empty set */,
	{0x2213, 0xb1} /* minus-or-plus sign */,
	{0x2218, 0xb0} /* ring operator */,
	{0x2219, 0x95} /* bullet operator */,
	{0x226a, 0xab} /* much less-than */,
	{0x226b, 0xbb} /* much greater-than */,
	{0x22c5, 0xb7} /* dot operator */,
	{0x2302, 0xa6} /* house */,
	{0x2500, 0xa6} /* box drawings light horizontal */,
	{0x2510, 0xac} /* box drawings light down and left */,
	{0x2551, 0xa6} /* box drawings double vertical */,
	{0x2557, 0xac} /* box drawings double down and left */,
	{0x2560, 0xa6} /* box drawings double vertical and right */,
	{0x2563, 0xa6} /* box drawings double vertical and left */,
	{0x2569, 0xa6} /* box drawings double up and horizontal */,
	{0x25a0, 0xa6} /* black square */,
	{0x25bc, 0xa1} /* black down-pointing triangle */,
	{0x25d8, 0x95} /* inverse bullet */,
	{0x263a, 0xa2} /* white smiling face */,
	{0x263b, 0xa2} /* black smiling face */,
	{0x2660, 0xa6} /* black spade suit */,
	{0x2663, 0xa6} /* black club suit */,
	{0x2665, 0xa6} /* black heart suit */,
	{0x2666, 0xa6} /* black diamond suit */,
	{0x275b, 0x91} /* heavy single turned comma quotation mark ornament */,
	{0x275c, 0x92} /* heavy single comma quotation mark ornament */,
	{0x275d, 0x93} /* heavy double turned comma quotation mark ornament */,
	{0x275e, 0x94} /* heavy double comma quotation mark ornament */,
	{0x300a, 0xab} /* left double angle bracket */,
	{0x300b, 0xbb} /* right double angle bracket */,
	{0x301d, 0x93} /* reversed double prime quotation mark */,
	{0x301e, 0x94} /* double prime quotation mark */,
	{0x301f, 0x84} /* low double prime quotation mark */,
	{0x30fb, 0xb7} /* katakana middle dot */,
	{0x30fc, 0x97} /* katakana-hiragana prolonged sound mark */
};

#define cet_ucs4_to_cp1250_extra_ct sizeof(cet_ucs4_to_cp1250_extra) / sizeof(cet_ucs4_to_cp1250_extra[0])

cet_cs_vec_t cet_cs_vec_cp1250 =	/* defined in cet.h */
{	
	cet_cs_name_cp1250,		/* name of character set	*/
	cet_cs_alias_cp1250,		/* alias table			*/

	NULL,				/* ... to UCS-4 converter (multi-byte) */
	NULL,				/* UCS-4 to ... converter (multi-byte) */

	cet_ucs4_map_cp1250,		/* char to UCS-4 value table	*/
	cet_ucs4_ofs_cp1250,		/* first non standard character	*/
	cet_ucs4_cnt_cp1250,		/* number of values in table	*/

	cet_ucs4_to_cp1250_links,	/* UCS-4 to char links		*/
	cet_ucs4_to_cp1250_ct,		/* number of links		*/

	cet_ucs4_to_cp1250_extra,	/* hand made UCS-4 links	*/
	cet_ucs4_to_cp1250_extra_ct,	/* number of extra links	*/

	NULL	/* for internal use */
};


/*
const int cp1250_ucs4_full_map[] =
{
	0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 
	0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 
	0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 
	0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 
	0x0020, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027, 
	0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f, 
	0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
	0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f, 
	0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 
	0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f, 
	0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 
	0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e, 0x005f, 
	0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
	0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f, 
	0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 
	0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x007f, 
	0x20ac,     -1, 0x201a,     -1, 0x201e, 0x2026, 0x2020, 0x2021, 
	    -1, 0x2030, 0x0160, 0x2039, 0x015a, 0x0164, 0x017d, 0x0179, 
	    -1, 0x2018, 0x2019, 0x201c, 0x201d, 0x2022, 0x2013, 0x2014, 
	    -1, 0x2122, 0x0161, 0x203a, 0x015b, 0x0165, 0x017e, 0x017a, 
	0x00a0, 0x02c7, 0x02d8, 0x0141, 0x00a4, 0x0104, 0x00a6, 0x00a7, 
	0x00a8, 0x00a9, 0x015e, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x017b, 
	0x00b0, 0x00b1, 0x02db, 0x0142, 0x00b4, 0x00b5, 0x00b6, 0x00b7, 
	0x00b8, 0x0105, 0x015f, 0x00bb, 0x013d, 0x02dd, 0x013e, 0x017c, 
	0x0154, 0x00c1, 0x00c2, 0x0102, 0x00c4, 0x0139, 0x0106, 0x00c7, 
	0x010c, 0x00c9, 0x0118, 0x00cb, 0x011a, 0x00cd, 0x00ce, 0x010e, 
	0x0110, 0x0143, 0x0147, 0x00d3, 0x00d4, 0x0150, 0x00d6, 0x00d7, 
	0x0158, 0x016e, 0x00da, 0x0170, 0x00dc, 0x00dd, 0x0162, 0x00df, 
	0x0155, 0x00e1, 0x00e2, 0x0103, 0x00e4, 0x013a, 0x0107, 0x00e7, 
	0x010d, 0x00e9, 0x0119, 0x00eb, 0x011b, 0x00ed, 0x00ee, 0x010f, 
	0x0111, 0x0144, 0x0148, 0x00f3, 0x00f4, 0x0151, 0x00f6, 0x00f7, 
	0x0159, 0x016f, 0x00fa, 0x0171, 0x00fc, 0x00fd, 0x0163, 0x02d9
};
*/

#endif
